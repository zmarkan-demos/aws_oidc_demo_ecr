version: 2.1

orbs: 
  node: circleci/node@5.1.0
  docker: circleci/docker@2.2.0
  aws-cli: circleci/aws-cli@3.1.4
  aws-ecr: circleci/aws-ecr@8.2.1


jobs:
  build-and-test:
    parameters:
      node_version:
        type: string
        default: 16.14.0
    docker:
      - image: cimg/node:<< parameters.node_version >>
    parallelism: 4
    steps:
      - checkout
      - node/install-packages
      - run:
          name: Run tests
          command: |
            npm run test-ci
      - run:
          name: Copy tests results for storing
          command: |
            mkdir test-results
            cp test-results.xml test-results/
          when: always
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  
  build_and_publish_image_to_aws_ecr:
    docker:
      - image: cimg/aws:2022.06
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup:
          role-arn: $AWS_OIDC_ARN_VAR	
          # optional parameters
          profile-name: "OIDC-PROFILE"
          role-session-name: circleci-aws-ecr-publish-job
          session-duration: "1800"
      - run:
         name: Log-into-AWS-ECR
         command: |
           # must use same profile specified in the step above       
           aws_ecr_pwd=$(aws ecr get-login-password --profile "OIDC-PROFILE")
           echo $aws_ecr_pwd
           echo "export DOCKER_PASSWORD=$aws_ecr_pwd" >> "$BASH_ENV"
           source $BASH_ENV
           echo "export AWS_DOCKER_LOGIN=AWS" >> "$BASH_ENV"
           source $BASH_ENV
           
      - docker/check:
          registry: $AWS_ECR_REGISTRY
          docker-username: AWS_DOCKER_LOGIN
      - docker/build:
          image: cci-demo-cr
          registry: $AWS_ECR_REGISTRY
          tag: 0.1.<< pipeline.number >>
      - docker/push:
          image: cci-demo-cr
          tag: 0.1.<< pipeline.number >>
          registry: $AWS_ECR_REGISTRY



workflows:
  test-deploy:
    jobs:
      - build-and-test
      - build_and_publish_image_to_aws_ecr:
          requires:
            - build-and-test
          context:
            - aws_oidc_demo_ecr-aws-role-arn
            - aws



